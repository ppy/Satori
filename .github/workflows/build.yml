name: Build
on:
  workflow_dispatch:
  push:
    tags:
      - '*'

jobs:
  windows:
    name: Build (${{ matrix.target.name }})
    runs-on: windows-latest
    strategy:
      matrix:
        target:
          - name: win-x64
            build-args: ''
            release-name: 'windows.x64.Release'
          - name: win-arm64
            build-args: '-arch arm64'
            release-name: 'windows.arm64.Release'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build
        run: ./build.cmd clr -c Release ${{ matrix.target.build-args }}

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target.name }}
          path: |
            artifacts/bin/coreclr/${{ matrix.target.release-name }}/coreclr.dll
            artifacts/bin/coreclr/${{ matrix.target.release-name }}/clrjit.dll
            artifacts/bin/coreclr/${{ matrix.target.release-name }}/System.Private.CoreLib.dll

  linux:
    name: Build (${{ matrix.target.name }})
    runs-on: ${{ matrix.target.os }}
    strategy:
      matrix:
        target:
          - name: linux-x64
            os: ubuntu-22.04
            release-name: 'linux.x64.Release'
          - name: linux-arm64
            os: ubuntu-22.04-arm
            release-name: 'linux.arm64.Release'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # https://github.com/dotnet/runtime/blob/main/docs/workflow/requirements/linux-requirements.md#debian-and-ubuntu
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            cmake llvm lld clang build-essential \
            python-is-python3 curl git lldb libicu-dev liblttng-ust-dev \
            libssl-dev libkrb5-dev ninja-build pigz cpio

      - name: Build
        run: ./build.sh clr -c Release

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target.name }}
          path: |
            artifacts/bin/coreclr/${{ matrix.target.release-name }}/libcoreclr.so
            artifacts/bin/coreclr/${{ matrix.target.release-name }}/libclrjit.so
            artifacts/bin/coreclr/${{ matrix.target.release-name }}/System.Private.CoreLib.dll

  osx:
    name: Build (${{ matrix.target.name }})
    runs-on: macos-latest
    strategy:
      matrix:
        target:
          - name: osx-x64
            build-args: '--cross -a x64'
            release-name: 'osx.x64.Release'
          - name: osx-arm64
            build-args: ''
            release-name: 'osx.arm64.Release'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build
        run: ./build.sh clr -c Release ${{ matrix.target.build-args }}

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target.name }}
          path: |
            artifacts/bin/coreclr/${{ matrix.target.release-name }}/libcoreclr.dylib
            artifacts/bin/coreclr/${{ matrix.target.release-name }}/libclrjit.dylib
            artifacts/bin/coreclr/${{ matrix.target.release-name }}/System.Private.CoreLib.dll

  release:
    name: Create release
    if: github.ref_type == 'tag'
    needs: [ windows, linux, osx ]
    runs-on: ubuntu-latest
    steps:
      - name: Download (win-x64)
        uses: actions/download-artifact@v4
        with:
          name: win-x64
          path: win-x64

      - name: Download (win-arm64)
        uses: actions/download-artifact@v4
        with:
          name: win-arm64
          path: win-arm64

      - name: Download (linux-x64)
        uses: actions/download-artifact@v4
        with:
          name: linux-x64
          path: linux-x64

      - name: Download (linux-arm64)
        uses: actions/download-artifact@v4
        with:
          name: linux-arm64
          path: linux-arm64

      - name: Download (osx-x64)
        uses: actions/download-artifact@v4
        with:
          name: osx-x64
          path: osx-x64

      - name: Download (osx-arm64)
        uses: actions/download-artifact@v4
        with:
          name: osx-arm64
          path: osx-arm64

      - name: Package
        run: |
          zip win-x64.zip win-x64/*
          zip win-arm64.zip win-arm64/*
          zip linux-x64.zip linux-x64/*
          zip linux-arm64.zip linux-arm64/*
          zip osx-x64.zip osx-x64/*
          zip osx-arm64.zip osx-arm64/*

      - name: Release
        uses: softprops/action-gh-release@da05d552573ad5aba039eaac05058a918a7bf631 # v2.2.2
        with:
          files: |
            win-x64.zip
            win-arm64.zip
            linux-x64.zip
            linux-arm64.zip
            osx-x64.zip
            osx-arm64.zip
